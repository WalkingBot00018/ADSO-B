class Persona: #Aqui se hace uso de la palabra  class para crear la clase despues se le asigna un nombre el cual es persona y asi queda creada la clase persona
    def __init__(self,nombre): #Se crea el constructor de la clase con el parametro obligatorio self el cual indica que el constructor se encuentra dentro de la clase persona y tambien permite al usuario especificar y acceder a los atributos y métodos de una instancia de la clase, y un parametro que se utilizara mas adelante el cual es nombre, basicamente __init__ es una de las partes obligatorias de una clase(constructor).
        self.__nombre=nombre #Se crea un atributo para el metodo __init__ el cual sera igual al parametro nombre asignado al constructor despues del parametro self
        print('Activando constructor') #En este apartado una vez se instancie un objeto de la clase persona, por defecto saldra este mensaje ya que siempre que se instancia un objeto este va unido directamente al constructor sin la necesidad de llamar dicho metodo.

    def getNombre(self): #Se crea un nuevo metodo para la clase persona el cual es getNombre con su parametro obligatorio self que indica que el metodo getNombre se encuentra dentro de la clase persona y permite al usuario especificar y acceder a los atributos y métodos de una instancia de la clase, y este metodo sirve para retornar y ver el nombre que ingreso por teclado con anterioridad.
        return self.__nombre #EL metodo getNombre cuando sea llamado retornara el atributo nombre anteriormente creado en el constructor el cual mostrara en consola el nombre que haya sido digitado por el usuario.
    
    def setNombre(self, nombre): #Se crea un nuevo metodo llamado setNombre el cual contiene dos parametros, self que es obligatorio para evidenciar que el metodo se encuentra dentro de la clase y permite al usuario especificar y acceder a los atributos y métodos de una instancia de la clase, y otro parametro llamado nombre que se usara a continuacion en el atributo.
        self.__nombre=nombre #Aqui se hace uso del atributo nombre anteriormente creado en el metodo __init__ el cual es el constructor y se le asigna como valor nombre el cual es el parametro del metodo setNombre que cambiara el nombre anteriormente puesto en el metodo comstructor, osea este metodo sirve para realizar una modificacion en el nombre anteriormente colocado.

    def metodo(self): #Se crea un nuevo metodo para la clase persona el cual se llama metodo y tiene como parametro self el cual es el parametro obligatorio para evidenciar que el metodo se encuuentra dentro de la clase persona y permite al usuario especificar y acceder a los atributos y métodos de una instancia de la clase.
        print('Soy un método') #Cuando se haga uso del metodo metodo o se llame, pues aparecera y se imprimira el mensaje "soy un metodo" en la consola y se podra evidenciar que se hizo un buen uso del mismo.

ob=Persona('Ana') #Se crea un objeto llamado "ob" que contiene la clase persona y en el lugar del parametro nombre, se le pasa un string que es 'Ana' el cual remplazara el parametro nombre por Ana y trabajara con el.
print(ob.getNombre()) #En esta parta se imprime el objeto "ob" con el metodo getNombre() que dara como resultado y mostrara en consola el string 'Ana'
ob.setNombre('Maria') #Aqui a traves del objeto "ob" se hace un llamado del metodo setNombre() y se le pasa como parametro 'Maria', el cual modificara el anterior parametro dado en el metodo getNombre() en cual fua 'Ana'. 
print(ob.getNombre()) #Se realiza un impresion del objeto "ob" con el metodo getNombre() que dara como resultado y mostrara por consola 'Maria' ya que fue modificado el parametro nombre en el metodo setNombre() que fue usado en la anterior linea de codigo.
ob.metodo() #Se hace un llamado del objeto 'ob' con su metodo llamado 'metodo' y esto mostrara por consola 'Soy un metodo' ya que cuando se creo el metodo fue lo unico que se puso en dicho metodo, un simple mensaje con el uso de un print.
print(type(ob)) #Aqui se imprime la funcion "type" que sirve para hallar que tipo de clase es un dato ya sea string, int, float, u otro inventado por el usuario como es este caso que se le pasa como parametro el objeto 'ob' el cual es o pertenece a la clase persona y esto lo mostrara la consola.